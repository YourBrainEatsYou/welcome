name: 'IOL Welcome Continuous Integration'

on:
  # Triggers the workflow on push or pull request events for the master and develop branch
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    environment: production
    # Run the jop on ubuntu because we can
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up local PHP for atomic deployment and status page updates
      - name: setup local php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: curl
          tools: composer

      # setup nodeJs for this container
      - name: setup nodeJs for this container
        uses: actions/setup-node@master
        with:
          node-version: 16

      # freshly install the node dependencies
      - name: Install dependencies
        run: npm ci

      - name: Build Application
        run: npm run build:prod

      # get the current timestamp for the atomic deployment
      - name: get current timestamp
        id: deployment-id
        run: echo "::set-output name=DEPLOYMENT_ID::$(date +%s)"

      - name: create new folder with current timestamp
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir "${{ secrets.BASE_PATH }}${{ secrets.DEPLOYMENTS_FOLDER }}/${{ steps.deployment-id.outputs.DEPLOYMENT_ID }}"

      # deploy freshly built application to our server because this makes us happy.
      - name: Deploy application
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: dist/welcome/
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: "${{ secrets.BASE_PATH }}${{ secrets.DEPLOYMENTS_FOLDER }}/${{ steps.deployment-id.outputs.DEPLOYMENT_ID }}"

      # after the application is uploaded lint the new folder
      - name: update symlink
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.BASE_PATH }}
            rm "${{ secrets.BASE_PATH }}live"
            ln -s "${{ secrets.DEPLOYMENTS_FOLDER }}/${{ steps.deployment-id.outputs.DEPLOYMENT_ID }}" live
